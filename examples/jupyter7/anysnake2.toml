# basic anysnake2.toml example
# package settings
[anysnake2]
	url = "dev"
	use_binary=false # optional, default = true. Download anysnake2 binary instead of building from source (both via a flake)


[nixpkgs]
# the nixpkgs used inside the container
	packages = [ # use https://search.nixos.org/packages to search
	"fish",
]
	url = "github:NixOS/nixpkgs/master/24.05"


[python] # python section is optional
	ecosystem_date="2024-08-16" # you get whatever packages the solver would have produced on that day
	version="3.12" # does not go down to 3.8.x. That's implicit in the nixpkgs (for now)


[python.packages]
# you can use version specifiers from https://www.python.org/dev/peps/pep-0440/#id53
	notebook=""
	#pandas=""


[rust]
	url = "github:oxalica/rust-overlay/master/d720bf3cebac38c2426d77ee2e59943012854cb8"
	version="1.55.0"


[container.env]
	ANYSNAKE2="1"


# container settings
[container.volumes_rw]
	"." = "/project" # map the current folder to /project


[cmd.default]
	run = """
cd /project
jupyter notebook
"""


[cmd.shell]
	run = """fish
"""


[cmd.test_pre_post]
	post_run_outside = """
echo "post_run"
"""
	pre_run_outside = """
echo "pre_run"
"""
	run = """
echo "run"
"""
	while_run_outside ="""
while :
do
	# write pid to pre_run.txt
	echo "$BASHPID" > while_run.txt
	sleep 1;
done
"""


[outside_nixpkgs]
# the nixpkgs used to run singularity and nixfmt
	url = "github:NixOS/nixpkgs/master/24.05"


[ancient_poetry]
	url = "git+https://codeberg.org/TyberiusPrime/ancient-poetry.git?ref=main&rev=54a06abec3273f42f9d86a36f184dbb3089cd9c9"


[poetry2nix]
	url = "github:nix-community/poetry2nix/master/cc0af1948e0887cd280496bd891fd40e52b40ff4"


[flake-util]
	url = "github:numtide/flake-utils/main/b1d9ab70662946ef0850d488da1c9019f3a9752a"
