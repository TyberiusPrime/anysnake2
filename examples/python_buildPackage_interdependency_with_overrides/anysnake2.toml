# basic anysnake2.toml example
# package settings
[anysnake2]
	rev = "dev" # pre 2.0 - 2.0+ uses url2
	url = "github:TyberiusPrime/anysnake2_release_flakes" # pre 2.0 - 2.0+ uses url2
	url2 = "dev"


[nixpkgs]
	packages = ["which"]
	url = "github:NixOS/nixpkgs/master/24.05"


[python] # python section is optional
	ecosystem_date="2022-11-23" # you get whatever packages the solver would have produced on that day
	version="3.10" # does not go down to 3.x.x. That's implicit in the nixpkgs (for now)


# additional_mkpython_arguments = """
# """ # must be verbatim nix code

[python.packages]
# you can use standard python requirements.txt version specification syntax
# i.e. version specifiers from https://www.python.org/dev/peps/pep-0440/#id53
# # you can refer to the repos you cloned
# testrepo={method="fetchFromGitHub", owner="TyberiusPrime", repo="_anysnake2_test_repo", overrides = ["testrepo2"], rev = "97d57e17c1bd4a5f547fa1c1be57c2f0a1d2ec6f", hash_97d57e17c1bd4a5f547fa1c1be57c2f0a1d2ec6f = "sha256-mZw37fLouWrA2L+49UOfUsF1MDy/q5pJImw+zczE4wU=" }
# testrepo2={method="fetchFromGitHub", owner="TyberiusPrime", repo="_anysnake2_test_repo2", rev = "a42420f8ba0a6bc9bda0425cd665515fb92dc2b4", hash_a42420f8ba0a6bc9bda0425cd665515fb92dc2b4 = "sha256-tLz9vDTxQqFZPKkkBOZmmNNEhtf6JK2nwWiBKNH6od8="}
	testrepo = { url = "github:TyberiusPrime/_anysnake2_test_repo/main/97d57e17c1bd4a5f547fa1c1be57c2f0a1d2ec6f", poetry2nix.buildInputs = ["setuptools"] }
	testrepo2 = { url = "github:TyberiusPrime/_anysnake2_test_repo2/main/a42420f8ba0a6bc9bda0425cd665515fb92dc2b4", poetry2nix.buildInputs = ["setuptools"]}


[outside_nixpkgs]
	url = "github:NixOS/nixpkgs/master/24.05"


[ancient_poetry]
	url = "git+https://codeberg.org/TyberiusPrime/ancient-poetry.git?ref=main&rev=54a06abec3273f42f9d86a36f184dbb3089cd9c9"


[poetry2nix]
	url = "github:nix-community/poetry2nix/master/8c25e871bba3f472e1569bbf6c0f52dcc34bf2a4"


[flake-util]
	url = "github:numtide/flake-utils/main/b1d9ab70662946ef0850d488da1c9019f3a9752a"


[devshell]
	inputs = []
	shell = "bash"


# and you can fetch from github, git and mercurial (any nix fetcher actually, see
# https://nixos.org/manual/nixpkgs/stable/#chap-pkgs-fetchers)
# if using fetchFromGitHub, the necessary hash will be added to this file
# on a trust-on-first-use-basis


