[anysnake2]
url2 = "dev" # replace with fixed version outside of tests/examples
[python.packages.rpy2]
    version = '*'
    poetry2nix.env = {R_HOME = '${R_tracked}'}

[nixpkgs]
packages = [ # use https://search.nixos.org/packages to search
	"fish",
	"netcat",
	"fd",
	"ripgrep",
	"strace",
	"which",
	"mercurial", # good test case for breaking site-packages
	"evcxr",
	"gcc",
	"gnumake",
	] # optional
url = "github:NixOS/nixpkgs/master/24.05"

[clone_regexps]
"@gh/([^/]+)"="git+https://github.com/\\1/\\0"
"@gh/([^/]+/[^/]+)"="git+https://github.com/\\1/"


[python] # python section is optional
version="3.9" # does not go down to 3.8.x. That's implicit in the nixpkgs (for now)
ecosystem_date="2021-11-21" # you get whatever packages the solver would have produced on that day
[python.packages]
importlib-resources=""

dppd={editable= true, poetry2nix.nativeBuildInputs=["setuptools"]}
setuptools="" # for dppd editable install
# pandas="<1.0"


[R]
date="2023-10-25" # you get whatever packages were current that day.
packages = [
	#"ggplot2",
	"dplyr",
	#"xts",
	]
url = "github:TyberiusPrime/nixR/main/bbfed71d90b2967f2226dd1cdb11b9060a5bef24"

[rust]
# version/rust section is optional. leave of for no rust
version = "1.55.0" # =stable.
url = "github:oxalica/rust-overlay/master/d720bf3cebac38c2426d77ee2e59943012854cb8"
# rev = "dev" = do not switch to fixed version, used in development.
# Otherwise a tag or hash from the anysnake github repo at
# (default https://github.com/TyberiusPrime/anysnake2).
# We leverage nix to run exactly that version.
# url = "https://github.com/TyberiusPrime/anysnake2" # if you want to override this.

# do_not_modify_flake = true # if set to true,
                             # flake/flake.nix is never overwritten,
							 # but stored in flake/flake.generated.nix.
							 # And nix build is called every run
							 # This is an escape hatch.

[dev_shell]
  shell = "fish"
#i to use nightly, add to nipkgs.packages 'rust-bin.nightly."2020-01-01".default'
# rust_overlay_rev = "08de2ff90cc08e7f9523ad97e4c1653b09f703ec" #https://github.com/oxalica/rust-overlay, optional
# rust_overlay_url = "github:oxalica/rust-overlay"


[container]

[flakes.hello]
	url = "github:TyberiusPrime/hello_flake/main/f32e7e451e9463667f6a1ddb7a662ec70d35144b"
	rev = "f32e7e451e9463667f6a1ddb7a662ec70d35144b" # flakes.lock tends to update unexpectedly, so we tie it down here
	follows = ["nixpkgs"] # so we overwrite the flakes dependencies
	packages = ["defaultPackage.x86_64-linux"]


[container.env]
MBF_EXTERNAL_PREBUILD_PATH="/machine/ffs/prebuild/externals/"
MBF_EXTERNAL_HOSTNAME = "${NICE_HOSTNAME}"
NICE_HOSTNAME="$NICE_HOSTNAME"
ANYSNAKE2_SOURCE="$PWD"
#home = "$HOME/singularity_home/$USER" # where to locate the singularity home. Defaults to $HOME

[container.volumes_ro]
"/opt" = "/opt"


[container.volumes_rw]
# home get's special treatment, see first line
"." = "/project"
"/var/run/docker.sock" = "/var/run/docker.sock"


[cmd.default]
run = """
echo 'run_inside'
set -x # show what we're executing
cd /project
echo 'pythonpath $PYTHONPATH'
python run.py
hello
no_such-command
"""

# the post run runs even if the run failed
post_run_inside = """
echo "post run inside - status was $ANYSNAKE_RUN_STATUS"
"""

# if this one fails, execution stops
pre_run_outside = """
echo "pre run outside"
"""

# runs independend of the sucess inside
post_run_outside = """
echo 'post run outside'
"""
# ports are exposed by default (using host network!)


[cmd.hello]
run = """
echo "running hello"
hello
python -m rpy2
"""

[cmd.jupyter]
run = """
jupyter notebook
"""

[cmd.shell]
run = """
echo "Calling fish"
fish
"""

[outside_nixpkgs]
url = "github:NixOS/nixpkgs/master/24.05"

[ancient_poetry]
url = "git+https://codeberg.org/TyberiusPrime/ancient-poetry.git?ref=main&rev=54a06abec3273f42f9d86a36f184dbb3089cd9c9"

[poetry2nix]
url = "github:nix-community/poetry2nix/master/cc0af1948e0887cd280496bd891fd40e52b40ff4"

[flake-util]
url = "github:numtide/flake-utils/main/b1d9ab70662946ef0850d488da1c9019f3a9752a"
